//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьДатаРожденияСотрудникаРавная(Парам01)","ЕстьДатаРожденияСотрудникаРавная","Допустим Есть дата рождения сотрудника равная 01.01.1980"); //'1978-03-08'");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастСотрудникаВМесяцахБудетРавен(Парам01)","ВозрастСотрудникаВМесяцахБудетРавен","Тогда Возраст сотрудника в месяцах будет равен 463");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим Есть дата рождения сотрудника равная 03.08.1978'
//@ЕстьДатаРожденияСотрудникаРавная(Парам01)
Процедура ЕстьДатаРожденияСотрудникаРавная(ДатаРождения) Экспорт
	Контекст.Вставить("ДатаРождения", ДатаРождения);
	//Сообщить(ТипЗнч(Контекст.ДатаРождения) + " :: " + Контекст.ДатаРождения);
	Сообщить(Контекст.ДатаРождения);
КонецПроцедуры

&НаКлиенте
//Тогда Возраст сотрудника в месяцах будет равен 463
//@ВозрастСотрудникаВМесяцахБудетРавен(Парам01)
Процедура ВозрастСотрудникаВМесяцахБудетРавен(ОжидаемыйРезультат) Экспорт
	Результат = обМодуль2.ПолучитьВозрастСотрудникаВМесяцах(Контекст.ДатаРождения);
	Если НЕ Результат = ОжидаемыйРезультат Тогда
		ВызватьИсключение "Результат рассчитан не верно";
		Сообщить(Результат + " :: " + ОжидаемыйРезультат);
	КонецЕсли;	
КонецПроцедуры

//окончание текста модуля